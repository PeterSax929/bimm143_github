---
title: "Class 11: AlphaFold"
author: "Peter"
format: html
toc: true
---

## HIV-Pr-dimer

```{r}
library(bio3d)
```

```{r}
pth <- "HIVPrdimer_a4e10/"
pdb.files <- list.files(path=pth, full.names=TRUE, pattern=".pdb")
```

```{r}
file.exists(pdb.files)
```
```{r}
pdbs <- pdbaln(pdb.files, fit=TRUE, exefile="msa")
```
```{r}
rd <- rmsd(pdbs, fit=T)
pdb <- read.pdb("1hsg")
```

```{r}
plotb3(pdbs$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs$b[2,], typ="l", col="red")
points(pdbs$b[3,], typ="l", col="blue")
points(pdbs$b[4,], typ="l", col="darkgreen")
points(pdbs$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```
```{r}
results_dir <- "HIVPrdimer_a4e10/" 
```

```{r}
pdb_files <- list.files(path=results_dir,
                        pattern="*.pdb",
                        full.names = TRUE)
basename(pdb_files)
```

```{r}
pdbs <- pdbaln(pdb_files, fit=TRUE, exefile="msa")
```
```{r}
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```
We can improve the superposition/fitting of our models by finding the most consistent “rigid core” common across all the models. For this we will use the core.find() function:

```{r}
core.inds <- core.find(pdbs)
xyz <- pdbfit(pdbs, core.inds, outpath="corefit_structures")
```
```{r}
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```
Independent of the 3D structure, AlphaFold produces an output called Predicted Aligned Error (PAE). This is detailed in the JSON format result files, one for each model structure.

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```
```{r}
head(pae1$plddt) 
pae1$max_pae
pae5$max_pae
```
```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```
```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```
```{r}
aln_file <- list.files(path=results_dir,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```
```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
dim(aln$ali)
```
```{r}
sim <- conserv(aln)
plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```
```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

## Bos Indicus (Find a Gene)





